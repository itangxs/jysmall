<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.qhjys.mall.mapper.CashSaveWithdrawMapper">
  <resultMap id="BaseResultMap" type="cn.qhjys.mall.entity.CashSaveWithdraw">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="oper_type" jdbcType="BIT" property="operType" />
    <result column="cash_id" jdbcType="BIGINT" property="cashId" />
    <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="bank_id" jdbcType="BIGINT" property="bankId" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="admin_id" jdbcType="BIGINT" property="adminId" />
    <result column="oper_date" jdbcType="TIMESTAMP" property="operDate" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="fee_money" jdbcType="DECIMAL" property="feeMoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, oper_type, cash_id, order_num, bank_id, money, admin_id, oper_date, create_date, 
    status, account_id, fee_money
  </sql>
  <select id="selectByExample" parameterType="cn.qhjys.mall.entity.CashSaveWithdrawExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cash_save_withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cash_save_withdraw
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cash_save_withdraw
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.qhjys.mall.entity.CashSaveWithdrawExample">
    delete from cash_save_withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.qhjys.mall.entity.CashSaveWithdraw">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cash_save_withdraw (oper_type, cash_id, order_num, 
      bank_id, money, admin_id, 
      oper_date, create_date, status, 
      account_id, fee_money)
    values (#{operType,jdbcType=BIT}, #{cashId,jdbcType=BIGINT}, #{orderNum,jdbcType=VARCHAR}, 
      #{bankId,jdbcType=BIGINT}, #{money,jdbcType=DECIMAL}, #{adminId,jdbcType=BIGINT}, 
      #{operDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{accountId,jdbcType=BIGINT}, #{feeMoney,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="cn.qhjys.mall.entity.CashSaveWithdraw">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cash_save_withdraw
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operType != null">
        oper_type,
      </if>
      <if test="cashId != null">
        cash_id,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="bankId != null">
        bank_id,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="operDate != null">
        oper_date,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="feeMoney != null">
        fee_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operType != null">
        #{operType,jdbcType=BIT},
      </if>
      <if test="cashId != null">
        #{cashId,jdbcType=BIGINT},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null">
        #{bankId,jdbcType=BIGINT},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=BIGINT},
      </if>
      <if test="operDate != null">
        #{operDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="feeMoney != null">
        #{feeMoney,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.qhjys.mall.entity.CashSaveWithdrawExample" resultType="java.lang.Long">
    select count(*) from cash_save_withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cash_save_withdraw
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.operType != null">
        oper_type = #{record.operType,jdbcType=BIT},
      </if>
      <if test="record.cashId != null">
        cash_id = #{record.cashId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.bankId != null">
        bank_id = #{record.bankId,jdbcType=BIGINT},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.adminId != null">
        admin_id = #{record.adminId,jdbcType=BIGINT},
      </if>
      <if test="record.operDate != null">
        oper_date = #{record.operDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.feeMoney != null">
        fee_money = #{record.feeMoney,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cash_save_withdraw
    set id = #{record.id,jdbcType=BIGINT},
      oper_type = #{record.operType,jdbcType=BIT},
      cash_id = #{record.cashId,jdbcType=BIGINT},
      order_num = #{record.orderNum,jdbcType=VARCHAR},
      bank_id = #{record.bankId,jdbcType=BIGINT},
      money = #{record.money,jdbcType=DECIMAL},
      admin_id = #{record.adminId,jdbcType=BIGINT},
      oper_date = #{record.operDate,jdbcType=TIMESTAMP},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      account_id = #{record.accountId,jdbcType=BIGINT},
      fee_money = #{record.feeMoney,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.qhjys.mall.entity.CashSaveWithdraw">
    update cash_save_withdraw
    <set>
      <if test="operType != null">
        oper_type = #{operType,jdbcType=BIT},
      </if>
      <if test="cashId != null">
        cash_id = #{cashId,jdbcType=BIGINT},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null">
        bank_id = #{bankId,jdbcType=BIGINT},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=BIGINT},
      </if>
      <if test="operDate != null">
        oper_date = #{operDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="feeMoney != null">
        fee_money = #{feeMoney,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.qhjys.mall.entity.CashSaveWithdraw">
    update cash_save_withdraw
    set oper_type = #{operType,jdbcType=BIT},
      cash_id = #{cashId,jdbcType=BIGINT},
      order_num = #{orderNum,jdbcType=VARCHAR},
      bank_id = #{bankId,jdbcType=BIGINT},
      money = #{money,jdbcType=DECIMAL},
      admin_id = #{adminId,jdbcType=BIGINT},
      oper_date = #{operDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      account_id = #{accountId,jdbcType=BIGINT},
      fee_money = #{feeMoney,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>