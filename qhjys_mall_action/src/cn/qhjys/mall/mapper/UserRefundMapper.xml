<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.qhjys.mall.mapper.UserRefundMapper" >
  <resultMap id="BaseResultMap" type="cn.qhjys.mall.entity.UserRefund" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="detail_id" property="detailId" jdbcType="BIGINT" />
    <result column="refund_price" property="refundPrice" jdbcType="DECIMAL" />
    <result column="refund_integral" property="refundIntegral" jdbcType="DECIMAL" />
    <result column="refund_reason" property="refundReason" jdbcType="VARCHAR" />
    <result column="reject_reason" property="rejectReason" jdbcType="VARCHAR" />
    <result column="images" property="images" jdbcType="VARCHAR" />
    <result column="platform_answer" property="platformAnswer" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, detail_id, refund_price, refund_integral, refund_reason, reject_reason, 
    images, platform_answer, status, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.qhjys.mall.entity.UserRefundExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_refund
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_refund
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.qhjys.mall.entity.UserRefundExample" >
    delete from user_refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.qhjys.mall.entity.UserRefund" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_refund (user_id, detail_id, refund_price, 
      refund_integral, refund_reason, reject_reason, 
      images, platform_answer, status, 
      create_time)
    values (#{userId,jdbcType=BIGINT}, #{detailId,jdbcType=BIGINT}, #{refundPrice,jdbcType=DECIMAL}, 
      #{refundIntegral,jdbcType=DECIMAL}, #{refundReason,jdbcType=VARCHAR}, #{rejectReason,jdbcType=VARCHAR}, 
      #{images,jdbcType=VARCHAR}, #{platformAnswer,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.qhjys.mall.entity.UserRefund" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_refund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="detailId != null" >
        detail_id,
      </if>
      <if test="refundPrice != null" >
        refund_price,
      </if>
      <if test="refundIntegral != null" >
        refund_integral,
      </if>
      <if test="refundReason != null" >
        refund_reason,
      </if>
      <if test="rejectReason != null" >
        reject_reason,
      </if>
      <if test="images != null" >
        images,
      </if>
      <if test="platformAnswer != null" >
        platform_answer,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="detailId != null" >
        #{detailId,jdbcType=BIGINT},
      </if>
      <if test="refundPrice != null" >
        #{refundPrice,jdbcType=DECIMAL},
      </if>
      <if test="refundIntegral != null" >
        #{refundIntegral,jdbcType=DECIMAL},
      </if>
      <if test="refundReason != null" >
        #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null" >
        #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="platformAnswer != null" >
        #{platformAnswer,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.qhjys.mall.entity.UserRefundExample" resultType="java.lang.Integer" >
    select count(*) from user_refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_refund
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.detailId != null" >
        detail_id = #{record.detailId,jdbcType=BIGINT},
      </if>
      <if test="record.refundPrice != null" >
        refund_price = #{record.refundPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.refundIntegral != null" >
        refund_integral = #{record.refundIntegral,jdbcType=DECIMAL},
      </if>
      <if test="record.refundReason != null" >
        refund_reason = #{record.refundReason,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectReason != null" >
        reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="record.images != null" >
        images = #{record.images,jdbcType=VARCHAR},
      </if>
      <if test="record.platformAnswer != null" >
        platform_answer = #{record.platformAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_refund
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      detail_id = #{record.detailId,jdbcType=BIGINT},
      refund_price = #{record.refundPrice,jdbcType=DECIMAL},
      refund_integral = #{record.refundIntegral,jdbcType=DECIMAL},
      refund_reason = #{record.refundReason,jdbcType=VARCHAR},
      reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      images = #{record.images,jdbcType=VARCHAR},
      platform_answer = #{record.platformAnswer,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.qhjys.mall.entity.UserRefund" >
    update user_refund
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="detailId != null" >
        detail_id = #{detailId,jdbcType=BIGINT},
      </if>
      <if test="refundPrice != null" >
        refund_price = #{refundPrice,jdbcType=DECIMAL},
      </if>
      <if test="refundIntegral != null" >
        refund_integral = #{refundIntegral,jdbcType=DECIMAL},
      </if>
      <if test="refundReason != null" >
        refund_reason = #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null" >
        reject_reason = #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="platformAnswer != null" >
        platform_answer = #{platformAnswer,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.qhjys.mall.entity.UserRefund" >
    update user_refund
    set user_id = #{userId,jdbcType=BIGINT},
      detail_id = #{detailId,jdbcType=BIGINT},
      refund_price = #{refundPrice,jdbcType=DECIMAL},
      refund_integral = #{refundIntegral,jdbcType=DECIMAL},
      refund_reason = #{refundReason,jdbcType=VARCHAR},
      reject_reason = #{rejectReason,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      platform_answer = #{platformAnswer,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>