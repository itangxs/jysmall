<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.qhjys.mall.mapper.CardUserLotteryMapper">
  <resultMap id="BaseResultMap" type="cn.qhjys.mall.entity.CardUserLottery">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="card_delivery_id" jdbcType="BIGINT" property="cardDeliveryId" />
    <result column="status_cfg" jdbcType="INTEGER" property="statusCfg" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="from_where" jdbcType="INTEGER" property="fromWhere" />
    <result column="seller_id" jdbcType="BIGINT" property="sellerId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="share_num" jdbcType="INTEGER" property="shareNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, open_id, user_id, card_delivery_id, status_cfg, status, create_time, from_where, 
    seller_id, order_id, share_num
  </sql>
  <select id="selectByExample" parameterType="cn.qhjys.mall.entity.CardUserLotteryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from card_user_lottery
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from card_user_lottery
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from card_user_lottery
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.qhjys.mall.entity.CardUserLotteryExample">
    delete from card_user_lottery
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.qhjys.mall.entity.CardUserLottery">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into card_user_lottery (open_id, user_id, card_delivery_id, 
      status_cfg, status, create_time, 
      from_where, seller_id, order_id, 
      share_num)
    values (#{openId,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{cardDeliveryId,jdbcType=BIGINT}, 
      #{statusCfg,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{fromWhere,jdbcType=INTEGER}, #{sellerId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, 
      #{shareNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.qhjys.mall.entity.CardUserLottery">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into card_user_lottery
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="openId != null">
        open_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="cardDeliveryId != null">
        card_delivery_id,
      </if>
      <if test="statusCfg != null">
        status_cfg,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="fromWhere != null">
        from_where,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="shareNum != null">
        share_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="cardDeliveryId != null">
        #{cardDeliveryId,jdbcType=BIGINT},
      </if>
      <if test="statusCfg != null">
        #{statusCfg,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromWhere != null">
        #{fromWhere,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="shareNum != null">
        #{shareNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.qhjys.mall.entity.CardUserLotteryExample" resultType="java.lang.Long">
    select count(*) from card_user_lottery
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update card_user_lottery
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.cardDeliveryId != null">
        card_delivery_id = #{record.cardDeliveryId,jdbcType=BIGINT},
      </if>
      <if test="record.statusCfg != null">
        status_cfg = #{record.statusCfg,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fromWhere != null">
        from_where = #{record.fromWhere,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.shareNum != null">
        share_num = #{record.shareNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update card_user_lottery
    set id = #{record.id,jdbcType=BIGINT},
      open_id = #{record.openId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      card_delivery_id = #{record.cardDeliveryId,jdbcType=BIGINT},
      status_cfg = #{record.statusCfg,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      from_where = #{record.fromWhere,jdbcType=INTEGER},
      seller_id = #{record.sellerId,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      share_num = #{record.shareNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.qhjys.mall.entity.CardUserLottery">
    update card_user_lottery
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="cardDeliveryId != null">
        card_delivery_id = #{cardDeliveryId,jdbcType=BIGINT},
      </if>
      <if test="statusCfg != null">
        status_cfg = #{statusCfg,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromWhere != null">
        from_where = #{fromWhere,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="shareNum != null">
        share_num = #{shareNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.qhjys.mall.entity.CardUserLottery">
    update card_user_lottery
    set open_id = #{openId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      card_delivery_id = #{cardDeliveryId,jdbcType=BIGINT},
      status_cfg = #{statusCfg,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      from_where = #{fromWhere,jdbcType=INTEGER},
      seller_id = #{sellerId,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=BIGINT},
      share_num = #{shareNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <update id="updateShareNumByOpenIdAndOrderId" parameterType="cn.qhjys.mall.entity.CardUserLottery">
      update card_user_lottery
	    set share_num = share_num + 1
	    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  
  <select id="countByShareNumBySellerIdAndDate"  parameterType="map" resultType="java.lang.Long">
       select sum(share_num) from card_user_lottery
          WHERE 
       seller_id = #{sellerId,jdbcType=BIGINT} and
       create_time  BETWEEN #{startDate} and #{endDate}   
       and status_cfg = #{statusCfg,jdbcType=INTEGER}
  </select>
  
  
  
  
</mapper>