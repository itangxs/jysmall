<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.qhjys.mall.mapper.CardDeliveryPropertyMapper" >
  <resultMap id="BaseResultMap" type="cn.qhjys.mall.entity.CardDeliveryProperty" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="deliver_type" property="deliverType" jdbcType="INTEGER" />
    <result column="card_receive_min" property="cardReceiveMin" jdbcType="INTEGER" />
    <result column="card_receive_max" property="cardReceiveMax" jdbcType="INTEGER" />
    <result column="card_push_min" property="cardPushMin" jdbcType="INTEGER" />
    <result column="card_push_max" property="cardPushMax" jdbcType="INTEGER" />
    <result column="card_share_min" property="cardShareMin" jdbcType="INTEGER" />
    <result column="card_share_max" property="cardShareMax" jdbcType="INTEGER" />
    <result column="card_share_receive_min" property="cardShareReceiveMin" jdbcType="INTEGER" />
    <result column="card_share_receive_max" property="cardShareReceiveMax" jdbcType="INTEGER" />
    <result column="first_rank_probability" property="firstRankProbability" jdbcType="INTEGER" />
    <result column="second_rank_probability" property="secondRankProbability" jdbcType="INTEGER" />
    <result column="third_rank_probability" property="thirdRankProbability" jdbcType="INTEGER" />
    <result column="fourth_rank_probability" property="fourthRankProbability" jdbcType="INTEGER" />
    <result column="delivery_num" property="deliveryNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, deliver_type, card_receive_min, card_receive_max, card_push_min, card_push_max, 
    card_share_min, card_share_max, card_share_receive_min, card_share_receive_max, first_rank_probability, 
    second_rank_probability, third_rank_probability, fourth_rank_probability, delivery_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.qhjys.mall.entity.CardDeliveryPropertyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from card_delivery_property
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from card_delivery_property
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from card_delivery_property
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.qhjys.mall.entity.CardDeliveryPropertyExample" >
    delete from card_delivery_property
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.qhjys.mall.entity.CardDeliveryProperty" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into card_delivery_property (deliver_type, card_receive_min, card_receive_max, 
      card_push_min, card_push_max, card_share_min, 
      card_share_max, card_share_receive_min, card_share_receive_max, 
      first_rank_probability, second_rank_probability, 
      third_rank_probability, fourth_rank_probability, 
      delivery_num)
    values (#{deliverType,jdbcType=INTEGER}, #{cardReceiveMin,jdbcType=INTEGER}, #{cardReceiveMax,jdbcType=INTEGER}, 
      #{cardPushMin,jdbcType=INTEGER}, #{cardPushMax,jdbcType=INTEGER}, #{cardShareMin,jdbcType=INTEGER}, 
      #{cardShareMax,jdbcType=INTEGER}, #{cardShareReceiveMin,jdbcType=INTEGER}, #{cardShareReceiveMax,jdbcType=INTEGER}, 
      #{firstRankProbability,jdbcType=INTEGER}, #{secondRankProbability,jdbcType=INTEGER}, 
      #{thirdRankProbability,jdbcType=INTEGER}, #{fourthRankProbability,jdbcType=INTEGER}, 
      #{deliveryNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.qhjys.mall.entity.CardDeliveryProperty" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into card_delivery_property
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deliverType != null" >
        deliver_type,
      </if>
      <if test="cardReceiveMin != null" >
        card_receive_min,
      </if>
      <if test="cardReceiveMax != null" >
        card_receive_max,
      </if>
      <if test="cardPushMin != null" >
        card_push_min,
      </if>
      <if test="cardPushMax != null" >
        card_push_max,
      </if>
      <if test="cardShareMin != null" >
        card_share_min,
      </if>
      <if test="cardShareMax != null" >
        card_share_max,
      </if>
      <if test="cardShareReceiveMin != null" >
        card_share_receive_min,
      </if>
      <if test="cardShareReceiveMax != null" >
        card_share_receive_max,
      </if>
      <if test="firstRankProbability != null" >
        first_rank_probability,
      </if>
      <if test="secondRankProbability != null" >
        second_rank_probability,
      </if>
      <if test="thirdRankProbability != null" >
        third_rank_probability,
      </if>
      <if test="fourthRankProbability != null" >
        fourth_rank_probability,
      </if>
      <if test="deliveryNum != null" >
        delivery_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deliverType != null" >
        #{deliverType,jdbcType=INTEGER},
      </if>
      <if test="cardReceiveMin != null" >
        #{cardReceiveMin,jdbcType=INTEGER},
      </if>
      <if test="cardReceiveMax != null" >
        #{cardReceiveMax,jdbcType=INTEGER},
      </if>
      <if test="cardPushMin != null" >
        #{cardPushMin,jdbcType=INTEGER},
      </if>
      <if test="cardPushMax != null" >
        #{cardPushMax,jdbcType=INTEGER},
      </if>
      <if test="cardShareMin != null" >
        #{cardShareMin,jdbcType=INTEGER},
      </if>
      <if test="cardShareMax != null" >
        #{cardShareMax,jdbcType=INTEGER},
      </if>
      <if test="cardShareReceiveMin != null" >
        #{cardShareReceiveMin,jdbcType=INTEGER},
      </if>
      <if test="cardShareReceiveMax != null" >
        #{cardShareReceiveMax,jdbcType=INTEGER},
      </if>
      <if test="firstRankProbability != null" >
        #{firstRankProbability,jdbcType=INTEGER},
      </if>
      <if test="secondRankProbability != null" >
        #{secondRankProbability,jdbcType=INTEGER},
      </if>
      <if test="thirdRankProbability != null" >
        #{thirdRankProbability,jdbcType=INTEGER},
      </if>
      <if test="fourthRankProbability != null" >
        #{fourthRankProbability,jdbcType=INTEGER},
      </if>
      <if test="deliveryNum != null" >
        #{deliveryNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.qhjys.mall.entity.CardDeliveryPropertyExample" resultType="java.lang.Integer" >
    select count(*) from card_delivery_property
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update card_delivery_property
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.deliverType != null" >
        deliver_type = #{record.deliverType,jdbcType=INTEGER},
      </if>
      <if test="record.cardReceiveMin != null" >
        card_receive_min = #{record.cardReceiveMin,jdbcType=INTEGER},
      </if>
      <if test="record.cardReceiveMax != null" >
        card_receive_max = #{record.cardReceiveMax,jdbcType=INTEGER},
      </if>
      <if test="record.cardPushMin != null" >
        card_push_min = #{record.cardPushMin,jdbcType=INTEGER},
      </if>
      <if test="record.cardPushMax != null" >
        card_push_max = #{record.cardPushMax,jdbcType=INTEGER},
      </if>
      <if test="record.cardShareMin != null" >
        card_share_min = #{record.cardShareMin,jdbcType=INTEGER},
      </if>
      <if test="record.cardShareMax != null" >
        card_share_max = #{record.cardShareMax,jdbcType=INTEGER},
      </if>
      <if test="record.cardShareReceiveMin != null" >
        card_share_receive_min = #{record.cardShareReceiveMin,jdbcType=INTEGER},
      </if>
      <if test="record.cardShareReceiveMax != null" >
        card_share_receive_max = #{record.cardShareReceiveMax,jdbcType=INTEGER},
      </if>
      <if test="record.firstRankProbability != null" >
        first_rank_probability = #{record.firstRankProbability,jdbcType=INTEGER},
      </if>
      <if test="record.secondRankProbability != null" >
        second_rank_probability = #{record.secondRankProbability,jdbcType=INTEGER},
      </if>
      <if test="record.thirdRankProbability != null" >
        third_rank_probability = #{record.thirdRankProbability,jdbcType=INTEGER},
      </if>
      <if test="record.fourthRankProbability != null" >
        fourth_rank_probability = #{record.fourthRankProbability,jdbcType=INTEGER},
      </if>
      <if test="record.deliveryNum != null" >
        delivery_num = #{record.deliveryNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update card_delivery_property
    set id = #{record.id,jdbcType=BIGINT},
      deliver_type = #{record.deliverType,jdbcType=INTEGER},
      card_receive_min = #{record.cardReceiveMin,jdbcType=INTEGER},
      card_receive_max = #{record.cardReceiveMax,jdbcType=INTEGER},
      card_push_min = #{record.cardPushMin,jdbcType=INTEGER},
      card_push_max = #{record.cardPushMax,jdbcType=INTEGER},
      card_share_min = #{record.cardShareMin,jdbcType=INTEGER},
      card_share_max = #{record.cardShareMax,jdbcType=INTEGER},
      card_share_receive_min = #{record.cardShareReceiveMin,jdbcType=INTEGER},
      card_share_receive_max = #{record.cardShareReceiveMax,jdbcType=INTEGER},
      first_rank_probability = #{record.firstRankProbability,jdbcType=INTEGER},
      second_rank_probability = #{record.secondRankProbability,jdbcType=INTEGER},
      third_rank_probability = #{record.thirdRankProbability,jdbcType=INTEGER},
      fourth_rank_probability = #{record.fourthRankProbability,jdbcType=INTEGER},
      delivery_num = #{record.deliveryNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.qhjys.mall.entity.CardDeliveryProperty" >
    update card_delivery_property
    <set >
      <if test="deliverType != null" >
        deliver_type = #{deliverType,jdbcType=INTEGER},
      </if>
      <if test="cardReceiveMin != null" >
        card_receive_min = #{cardReceiveMin,jdbcType=INTEGER},
      </if>
      <if test="cardReceiveMax != null" >
        card_receive_max = #{cardReceiveMax,jdbcType=INTEGER},
      </if>
      <if test="cardPushMin != null" >
        card_push_min = #{cardPushMin,jdbcType=INTEGER},
      </if>
      <if test="cardPushMax != null" >
        card_push_max = #{cardPushMax,jdbcType=INTEGER},
      </if>
      <if test="cardShareMin != null" >
        card_share_min = #{cardShareMin,jdbcType=INTEGER},
      </if>
      <if test="cardShareMax != null" >
        card_share_max = #{cardShareMax,jdbcType=INTEGER},
      </if>
      <if test="cardShareReceiveMin != null" >
        card_share_receive_min = #{cardShareReceiveMin,jdbcType=INTEGER},
      </if>
      <if test="cardShareReceiveMax != null" >
        card_share_receive_max = #{cardShareReceiveMax,jdbcType=INTEGER},
      </if>
      <if test="firstRankProbability != null" >
        first_rank_probability = #{firstRankProbability,jdbcType=INTEGER},
      </if>
      <if test="secondRankProbability != null" >
        second_rank_probability = #{secondRankProbability,jdbcType=INTEGER},
      </if>
      <if test="thirdRankProbability != null" >
        third_rank_probability = #{thirdRankProbability,jdbcType=INTEGER},
      </if>
      <if test="fourthRankProbability != null" >
        fourth_rank_probability = #{fourthRankProbability,jdbcType=INTEGER},
      </if>
      <if test="deliveryNum != null" >
        delivery_num = #{deliveryNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.qhjys.mall.entity.CardDeliveryProperty" >
    update card_delivery_property
    set deliver_type = #{deliverType,jdbcType=INTEGER},
      card_receive_min = #{cardReceiveMin,jdbcType=INTEGER},
      card_receive_max = #{cardReceiveMax,jdbcType=INTEGER},
      card_push_min = #{cardPushMin,jdbcType=INTEGER},
      card_push_max = #{cardPushMax,jdbcType=INTEGER},
      card_share_min = #{cardShareMin,jdbcType=INTEGER},
      card_share_max = #{cardShareMax,jdbcType=INTEGER},
      card_share_receive_min = #{cardShareReceiveMin,jdbcType=INTEGER},
      card_share_receive_max = #{cardShareReceiveMax,jdbcType=INTEGER},
      first_rank_probability = #{firstRankProbability,jdbcType=INTEGER},
      second_rank_probability = #{secondRankProbability,jdbcType=INTEGER},
      third_rank_probability = #{thirdRankProbability,jdbcType=INTEGER},
      fourth_rank_probability = #{fourthRankProbability,jdbcType=INTEGER},
      delivery_num = #{deliveryNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>