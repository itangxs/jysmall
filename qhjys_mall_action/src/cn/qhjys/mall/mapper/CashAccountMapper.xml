<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.qhjys.mall.mapper.CashAccountMapper" >
  <resultMap id="BaseResultMap" type="cn.qhjys.mall.entity.CashAccount" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="account_type" property="accountType" jdbcType="BIT" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="pay_code" property="payCode" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="freeze_money" property="freezeMoney" jdbcType="DECIMAL" />
    <result column="withdraw_money" property="withdrawMoney" jdbcType="DECIMAL" />
    <result column="integral" property="integral" jdbcType="DECIMAL" />
    <result column="freeze_integral" property="freezeIntegral" jdbcType="DECIMAL" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account_type, account_id, pay_code, balance, freeze_money, withdraw_money, integral, 
    freeze_integral, create_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.qhjys.mall.entity.CashAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cash_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from cash_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from cash_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.qhjys.mall.entity.CashAccountExample" >
    delete from cash_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.qhjys.mall.entity.CashAccount" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cash_account (account_type, account_id, pay_code, 
      balance, freeze_money, withdraw_money, 
      integral, freeze_integral, create_date
      )
    values (#{accountType,jdbcType=BIT}, #{accountId,jdbcType=BIGINT}, #{payCode,jdbcType=VARCHAR}, 
      #{balance,jdbcType=DECIMAL}, #{freezeMoney,jdbcType=DECIMAL}, #{withdrawMoney,jdbcType=DECIMAL}, 
      #{integral,jdbcType=DECIMAL}, #{freezeIntegral,jdbcType=DECIMAL}, #{createDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.qhjys.mall.entity.CashAccount" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cash_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="payCode != null" >
        pay_code,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="freezeMoney != null" >
        freeze_money,
      </if>
      <if test="withdrawMoney != null" >
        withdraw_money,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="freezeIntegral != null" >
        freeze_integral,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountType != null" >
        #{accountType,jdbcType=BIT},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="payCode != null" >
        #{payCode,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="freezeMoney != null" >
        #{freezeMoney,jdbcType=DECIMAL},
      </if>
      <if test="withdrawMoney != null" >
        #{withdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=DECIMAL},
      </if>
      <if test="freezeIntegral != null" >
        #{freezeIntegral,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.qhjys.mall.entity.CashAccountExample" resultType="java.lang.Integer" >
    select count(*) from cash_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cash_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.accountType != null" >
        account_type = #{record.accountType,jdbcType=BIT},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.payCode != null" >
        pay_code = #{record.payCode,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.freezeMoney != null" >
        freeze_money = #{record.freezeMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.withdrawMoney != null" >
        withdraw_money = #{record.withdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.integral != null" >
        integral = #{record.integral,jdbcType=DECIMAL},
      </if>
      <if test="record.freezeIntegral != null" >
        freeze_integral = #{record.freezeIntegral,jdbcType=DECIMAL},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cash_account
    set id = #{record.id,jdbcType=BIGINT},
      account_type = #{record.accountType,jdbcType=BIT},
      account_id = #{record.accountId,jdbcType=BIGINT},
      pay_code = #{record.payCode,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=DECIMAL},
      freeze_money = #{record.freezeMoney,jdbcType=DECIMAL},
      withdraw_money = #{record.withdrawMoney,jdbcType=DECIMAL},
      integral = #{record.integral,jdbcType=DECIMAL},
      freeze_integral = #{record.freezeIntegral,jdbcType=DECIMAL},
      create_date = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.qhjys.mall.entity.CashAccount" >
    update cash_account
    <set >
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=BIT},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="payCode != null" >
        pay_code = #{payCode,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="freezeMoney != null" >
        freeze_money = #{freezeMoney,jdbcType=DECIMAL},
      </if>
      <if test="withdrawMoney != null" >
        withdraw_money = #{withdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=DECIMAL},
      </if>
      <if test="freezeIntegral != null" >
        freeze_integral = #{freezeIntegral,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.qhjys.mall.entity.CashAccount" >
    update cash_account
    set account_type = #{accountType,jdbcType=BIT},
      account_id = #{accountId,jdbcType=BIGINT},
      pay_code = #{payCode,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL},
      freeze_money = #{freezeMoney,jdbcType=DECIMAL},
      withdraw_money = #{withdrawMoney,jdbcType=DECIMAL},
      integral = #{integral,jdbcType=DECIMAL},
      freeze_integral = #{freezeIntegral,jdbcType=DECIMAL},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>