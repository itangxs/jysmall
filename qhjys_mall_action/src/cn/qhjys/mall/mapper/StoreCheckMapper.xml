<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.qhjys.mall.mapper.StoreCheckMapper" >
  <resultMap id="BaseResultMap" type="cn.qhjys.mall.entity.StoreCheck" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="store_id" property="storeId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="keywork" property="keywork" jdbcType="VARCHAR" />
    <result column="contact_name" property="contactName" jdbcType="VARCHAR" />
    <result column="contact_tel" property="contactTel" jdbcType="VARCHAR" />
    <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="BIGINT" />
    <result column="city" property="city" jdbcType="BIGINT" />
    <result column="area" property="area" jdbcType="BIGINT" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="longitude" property="longitude" jdbcType="DOUBLE" />
    <result column="latitude" property="latitude" jdbcType="DOUBLE" />
    <result column="images" property="images" jdbcType="VARCHAR" />
    <result column="labels" property="labels" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="BIGINT" />
    <result column="category_details" property="categoryDetails" jdbcType="VARCHAR" />
    <result column="promise" property="promise" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.qhjys.mall.entity.StoreCheck" extends="BaseResultMap" >
    <result column="store_detail" property="storeDetail" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, store_id, name, logo, keywork, contact_name, contact_tel, contact_phone, province, 
    city, area, address, longitude, latitude, images, labels, category_id, category_details, 
    promise, status
  </sql>
  <sql id="Blob_Column_List" >
    store_detail
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.qhjys.mall.entity.StoreCheckExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from store_check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.qhjys.mall.entity.StoreCheckExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store_check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from store_check
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from store_check
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.qhjys.mall.entity.StoreCheckExample" >
    delete from store_check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.qhjys.mall.entity.StoreCheck" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into store_check (store_id, name, logo, 
      keywork, contact_name, contact_tel, 
      contact_phone, province, city, 
      area, address, longitude, 
      latitude, images, labels, 
      category_id, category_details, promise, 
      status, store_detail)
    values (#{storeId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, 
      #{keywork,jdbcType=VARCHAR}, #{contactName,jdbcType=VARCHAR}, #{contactTel,jdbcType=VARCHAR}, 
      #{contactPhone,jdbcType=VARCHAR}, #{province,jdbcType=BIGINT}, #{city,jdbcType=BIGINT}, 
      #{area,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, 
      #{latitude,jdbcType=DOUBLE}, #{images,jdbcType=VARCHAR}, #{labels,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=BIGINT}, #{categoryDetails,jdbcType=VARCHAR}, #{promise,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, #{storeDetail,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.qhjys.mall.entity.StoreCheck" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into store_check
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="logo != null" >
        logo,
      </if>
      <if test="keywork != null" >
        keywork,
      </if>
      <if test="contactName != null" >
        contact_name,
      </if>
      <if test="contactTel != null" >
        contact_tel,
      </if>
      <if test="contactPhone != null" >
        contact_phone,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="images != null" >
        images,
      </if>
      <if test="labels != null" >
        labels,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="categoryDetails != null" >
        category_details,
      </if>
      <if test="promise != null" >
        promise,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="storeDetail != null" >
        store_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storeId != null" >
        #{storeId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="keywork != null" >
        #{keywork,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactTel != null" >
        #{contactTel,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=BIGINT},
      </if>
      <if test="city != null" >
        #{city,jdbcType=BIGINT},
      </if>
      <if test="area != null" >
        #{area,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="images != null" >
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="labels != null" >
        #{labels,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="categoryDetails != null" >
        #{categoryDetails,jdbcType=VARCHAR},
      </if>
      <if test="promise != null" >
        #{promise,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="storeDetail != null" >
        #{storeDetail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.qhjys.mall.entity.StoreCheckExample" resultType="java.lang.Integer" >
    select count(*) from store_check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update store_check
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.logo != null" >
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.keywork != null" >
        keywork = #{record.keywork,jdbcType=VARCHAR},
      </if>
      <if test="record.contactName != null" >
        contact_name = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactTel != null" >
        contact_tel = #{record.contactTel,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPhone != null" >
        contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=BIGINT},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=BIGINT},
      </if>
      <if test="record.area != null" >
        area = #{record.area,jdbcType=BIGINT},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null" >
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.images != null" >
        images = #{record.images,jdbcType=VARCHAR},
      </if>
      <if test="record.labels != null" >
        labels = #{record.labels,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=BIGINT},
      </if>
      <if test="record.categoryDetails != null" >
        category_details = #{record.categoryDetails,jdbcType=VARCHAR},
      </if>
      <if test="record.promise != null" >
        promise = #{record.promise,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.storeDetail != null" >
        store_detail = #{record.storeDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update store_check
    set id = #{record.id,jdbcType=BIGINT},
      store_id = #{record.storeId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      logo = #{record.logo,jdbcType=VARCHAR},
      keywork = #{record.keywork,jdbcType=VARCHAR},
      contact_name = #{record.contactName,jdbcType=VARCHAR},
      contact_tel = #{record.contactTel,jdbcType=VARCHAR},
      contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=BIGINT},
      city = #{record.city,jdbcType=BIGINT},
      area = #{record.area,jdbcType=BIGINT},
      address = #{record.address,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      images = #{record.images,jdbcType=VARCHAR},
      labels = #{record.labels,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=BIGINT},
      category_details = #{record.categoryDetails,jdbcType=VARCHAR},
      promise = #{record.promise,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      store_detail = #{record.storeDetail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update store_check
    set id = #{record.id,jdbcType=BIGINT},
      store_id = #{record.storeId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      logo = #{record.logo,jdbcType=VARCHAR},
      keywork = #{record.keywork,jdbcType=VARCHAR},
      contact_name = #{record.contactName,jdbcType=VARCHAR},
      contact_tel = #{record.contactTel,jdbcType=VARCHAR},
      contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=BIGINT},
      city = #{record.city,jdbcType=BIGINT},
      area = #{record.area,jdbcType=BIGINT},
      address = #{record.address,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      images = #{record.images,jdbcType=VARCHAR},
      labels = #{record.labels,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=BIGINT},
      category_details = #{record.categoryDetails,jdbcType=VARCHAR},
      promise = #{record.promise,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.qhjys.mall.entity.StoreCheck" >
    update store_check
    <set >
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="keywork != null" >
        keywork = #{keywork,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactTel != null" >
        contact_tel = #{contactTel,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=BIGINT},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=BIGINT},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="images != null" >
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="labels != null" >
        labels = #{labels,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="categoryDetails != null" >
        category_details = #{categoryDetails,jdbcType=VARCHAR},
      </if>
      <if test="promise != null" >
        promise = #{promise,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="storeDetail != null" >
        store_detail = #{storeDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.qhjys.mall.entity.StoreCheck" >
    update store_check
    set store_id = #{storeId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      keywork = #{keywork,jdbcType=VARCHAR},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_tel = #{contactTel,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      province = #{province,jdbcType=BIGINT},
      city = #{city,jdbcType=BIGINT},
      area = #{area,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      images = #{images,jdbcType=VARCHAR},
      labels = #{labels,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=BIGINT},
      category_details = #{categoryDetails,jdbcType=VARCHAR},
      promise = #{promise,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      store_detail = #{storeDetail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.qhjys.mall.entity.StoreCheck" >
    update store_check
    set store_id = #{storeId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      keywork = #{keywork,jdbcType=VARCHAR},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_tel = #{contactTel,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      province = #{province,jdbcType=BIGINT},
      city = #{city,jdbcType=BIGINT},
      area = #{area,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      images = #{images,jdbcType=VARCHAR},
      labels = #{labels,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=BIGINT},
      category_details = #{categoryDetails,jdbcType=VARCHAR},
      promise = #{promise,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>