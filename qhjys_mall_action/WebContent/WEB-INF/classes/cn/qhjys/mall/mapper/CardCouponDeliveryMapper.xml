<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.qhjys.mall.mapper.CardCouponDeliveryMapper" >
  <resultMap id="BaseResultMap" type="cn.qhjys.mall.entity.CardCouponDelivery" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="seller_id" property="sellerId" jdbcType="BIGINT" />
    <result column="push_num" property="pushNum" jdbcType="INTEGER" />
    <result column="peripheral_status" property="peripheralStatus" jdbcType="INTEGER" />
    <result column="proprietary_status" property="proprietaryStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, seller_id, push_num, peripheral_status, proprietary_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.qhjys.mall.entity.CardCouponDeliveryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from card_coupon_delivery
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from card_coupon_delivery
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from card_coupon_delivery
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.qhjys.mall.entity.CardCouponDeliveryExample" >
    delete from card_coupon_delivery
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.qhjys.mall.entity.CardCouponDelivery" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into card_coupon_delivery (seller_id, push_num, peripheral_status, 
      proprietary_status)
    values (#{sellerId,jdbcType=BIGINT}, #{pushNum,jdbcType=INTEGER}, #{peripheralStatus,jdbcType=INTEGER}, 
      #{proprietaryStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.qhjys.mall.entity.CardCouponDelivery" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into card_coupon_delivery
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="pushNum != null" >
        push_num,
      </if>
      <if test="peripheralStatus != null" >
        peripheral_status,
      </if>
      <if test="proprietaryStatus != null" >
        proprietary_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sellerId != null" >
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="pushNum != null" >
        #{pushNum,jdbcType=INTEGER},
      </if>
      <if test="peripheralStatus != null" >
        #{peripheralStatus,jdbcType=INTEGER},
      </if>
      <if test="proprietaryStatus != null" >
        #{proprietaryStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.qhjys.mall.entity.CardCouponDeliveryExample" resultType="java.lang.Integer" >
    select count(*) from card_coupon_delivery
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update card_coupon_delivery
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=BIGINT},
      </if>
      <if test="record.pushNum != null" >
        push_num = #{record.pushNum,jdbcType=INTEGER},
      </if>
      <if test="record.peripheralStatus != null" >
        peripheral_status = #{record.peripheralStatus,jdbcType=INTEGER},
      </if>
      <if test="record.proprietaryStatus != null" >
        proprietary_status = #{record.proprietaryStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update card_coupon_delivery
    set id = #{record.id,jdbcType=BIGINT},
      seller_id = #{record.sellerId,jdbcType=BIGINT},
      push_num = #{record.pushNum,jdbcType=INTEGER},
      peripheral_status = #{record.peripheralStatus,jdbcType=INTEGER},
      proprietary_status = #{record.proprietaryStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.qhjys.mall.entity.CardCouponDelivery" >
    update card_coupon_delivery
    <set >
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="pushNum != null" >
        push_num = #{pushNum,jdbcType=INTEGER},
      </if>
      <if test="peripheralStatus != null" >
        peripheral_status = #{peripheralStatus,jdbcType=INTEGER},
      </if>
      <if test="proprietaryStatus != null" >
        proprietary_status = #{proprietaryStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.qhjys.mall.entity.CardCouponDelivery" >
    update card_coupon_delivery
    set seller_id = #{sellerId,jdbcType=BIGINT},
      push_num = #{pushNum,jdbcType=INTEGER},
      peripheral_status = #{peripheralStatus,jdbcType=INTEGER},
      proprietary_status = #{proprietaryStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <update id="updateReducePushNum" parameterType="java.lang.Long">
    	update card_coupon_delivery set push_num = push_num-1 where push_num>0 and seller_id = #{sellerId}
  </update>
  
  
  <select id="selectSellerPeripheralList" resultType="java.util.Map" parameterType="java.util.Map">
    	select 
			c.id as deliveryId,c.seller_id as sellerId,s.id as storeId,s.name as storeName
		from card_coupon_delivery c,store_info s
		where c.seller_id = s.seller_id   and 
		     peripheral_status=1
		    AND c.id >= ((SELECT MAX(id) FROM card_coupon_delivery)-(SELECT MIN(id) FROM card_coupon_delivery)) * RAND() + (SELECT MIN(id) FROM card_coupon_delivery)	 
		<if test="cityId != null">
      		and 	s.city = #{cityId}
    		</if>
		<if test="categoryId != null">
      		and 	s.category_id != #{categoryId}
    		</if>
        
		<if test="sellerId != null">
      		and 	s.seller_id != #{sellerId}
    		</if>
		                
		limit 5
  </select>

  
    <select id="selectSellerDeliveryCardTemplateList" parameterType="java.util.Map" resultType="java.util.Map">
    	SELECT
			  ct.id,ct.`name`,ct.coupon_cfg as couponCfg
		FROM 
			card_coupon_delivery d,
			card_coupon_delivery_template_relation dr,
			card_coupon_template ct
		where 
			d.seller_id=#{sellerId} and
			dr.status_cfg = #{statusCfg}  and 
			<if test=" statusCfg == '1' or statusCfg== 1">
      			d.proprietary_status= 1 and 
    		</if>
			<if test=" statusCfg == '2' or statusCfg==2">
      			d.peripheral_status= 1 and 
    		</if>
			d.id = dr.card_coupon_delivery_id and 
			dr.card_coupon_template_id = ct.id
			order BY dr.sort asc
  </select>
  
</mapper>