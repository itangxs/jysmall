<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.qhjys.mall.mapper.FqThirdPayMapper" >
  <resultMap id="BaseResultMap" type="cn.qhjys.mall.entity.FqThirdPay" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="third_order_no" property="thirdOrderNo" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="seller_id" property="sellerId" jdbcType="BIGINT" />
    <result column="totamt" property="totamt" jdbcType="DECIMAL" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="bank_type" property="bankType" jdbcType="INTEGER" />
    <result column="bank_type_code" property="bankTypeCode" jdbcType="VARCHAR" />
    <result column="bank_type_info" property="bankTypeInfo" jdbcType="VARCHAR" />
    <result column="order_rate" property="orderRate" jdbcType="DECIMAL" />
    <result column="rate_fee" property="rateFee" jdbcType="DECIMAL" />
    <result column="is_cash" property="isCash" jdbcType="INTEGER" />
    <result column="pay_num" property="payNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, order_no, third_order_no, type, sort, money, pay_time, seller_id, totamt, 
    user_id, open_id, bank_type, bank_type_code, bank_type_info, order_rate, rate_fee, 
    is_cash, pay_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.qhjys.mall.entity.FqThirdPayExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fq_third_pay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from fq_third_pay
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from fq_third_pay
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.qhjys.mall.entity.FqThirdPayExample" >
    delete from fq_third_pay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.qhjys.mall.entity.FqThirdPay" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fq_third_pay (order_id, order_no, third_order_no, 
      type, sort, money, 
      pay_time, seller_id, totamt, 
      user_id, open_id, bank_type, 
      bank_type_code, bank_type_info, order_rate, 
      rate_fee, is_cash, pay_num
      )
    values (#{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{thirdOrderNo,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL}, 
      #{payTime,jdbcType=TIMESTAMP}, #{sellerId,jdbcType=BIGINT}, #{totamt,jdbcType=DECIMAL}, 
      #{userId,jdbcType=BIGINT}, #{openId,jdbcType=VARCHAR}, #{bankType,jdbcType=INTEGER}, 
      #{bankTypeCode,jdbcType=VARCHAR}, #{bankTypeInfo,jdbcType=VARCHAR}, #{orderRate,jdbcType=DECIMAL}, 
      #{rateFee,jdbcType=DECIMAL}, #{isCash,jdbcType=INTEGER}, #{payNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.qhjys.mall.entity.FqThirdPay" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fq_third_pay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="thirdOrderNo != null" >
        third_order_no,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="totamt != null" >
        totamt,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="bankType != null" >
        bank_type,
      </if>
      <if test="bankTypeCode != null" >
        bank_type_code,
      </if>
      <if test="bankTypeInfo != null" >
        bank_type_info,
      </if>
      <if test="orderRate != null" >
        order_rate,
      </if>
      <if test="rateFee != null" >
        rate_fee,
      </if>
      <if test="isCash != null" >
        is_cash,
      </if>
      <if test="payNum != null" >
        pay_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="thirdOrderNo != null" >
        #{thirdOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="totamt != null" >
        #{totamt,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null" >
        #{bankType,jdbcType=INTEGER},
      </if>
      <if test="bankTypeCode != null" >
        #{bankTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="bankTypeInfo != null" >
        #{bankTypeInfo,jdbcType=VARCHAR},
      </if>
      <if test="orderRate != null" >
        #{orderRate,jdbcType=DECIMAL},
      </if>
      <if test="rateFee != null" >
        #{rateFee,jdbcType=DECIMAL},
      </if>
      <if test="isCash != null" >
        #{isCash,jdbcType=INTEGER},
      </if>
      <if test="payNum != null" >
        #{payNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.qhjys.mall.entity.FqThirdPayExample" resultType="java.lang.Integer" >
    select count(*) from fq_third_pay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fq_third_pay
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.thirdOrderNo != null" >
        third_order_no = #{record.thirdOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=BIGINT},
      </if>
      <if test="record.totamt != null" >
        totamt = #{record.totamt,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.openId != null" >
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.bankType != null" >
        bank_type = #{record.bankType,jdbcType=INTEGER},
      </if>
      <if test="record.bankTypeCode != null" >
        bank_type_code = #{record.bankTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankTypeInfo != null" >
        bank_type_info = #{record.bankTypeInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderRate != null" >
        order_rate = #{record.orderRate,jdbcType=DECIMAL},
      </if>
      <if test="record.rateFee != null" >
        rate_fee = #{record.rateFee,jdbcType=DECIMAL},
      </if>
      <if test="record.isCash != null" >
        is_cash = #{record.isCash,jdbcType=INTEGER},
      </if>
      <if test="record.payNum != null" >
        pay_num = #{record.payNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fq_third_pay
    set id = #{record.id,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      third_order_no = #{record.thirdOrderNo,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      seller_id = #{record.sellerId,jdbcType=BIGINT},
      totamt = #{record.totamt,jdbcType=DECIMAL},
      user_id = #{record.userId,jdbcType=BIGINT},
      open_id = #{record.openId,jdbcType=VARCHAR},
      bank_type = #{record.bankType,jdbcType=INTEGER},
      bank_type_code = #{record.bankTypeCode,jdbcType=VARCHAR},
      bank_type_info = #{record.bankTypeInfo,jdbcType=VARCHAR},
      order_rate = #{record.orderRate,jdbcType=DECIMAL},
      rate_fee = #{record.rateFee,jdbcType=DECIMAL},
      is_cash = #{record.isCash,jdbcType=INTEGER},
      pay_num = #{record.payNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.qhjys.mall.entity.FqThirdPay" >
    update fq_third_pay
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="thirdOrderNo != null" >
        third_order_no = #{thirdOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="totamt != null" >
        totamt = #{totamt,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null" >
        bank_type = #{bankType,jdbcType=INTEGER},
      </if>
      <if test="bankTypeCode != null" >
        bank_type_code = #{bankTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="bankTypeInfo != null" >
        bank_type_info = #{bankTypeInfo,jdbcType=VARCHAR},
      </if>
      <if test="orderRate != null" >
        order_rate = #{orderRate,jdbcType=DECIMAL},
      </if>
      <if test="rateFee != null" >
        rate_fee = #{rateFee,jdbcType=DECIMAL},
      </if>
      <if test="isCash != null" >
        is_cash = #{isCash,jdbcType=INTEGER},
      </if>
      <if test="payNum != null" >
        pay_num = #{payNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.qhjys.mall.entity.FqThirdPay" >
    update fq_third_pay
    set order_id = #{orderId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      third_order_no = #{thirdOrderNo,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      seller_id = #{sellerId,jdbcType=BIGINT},
      totamt = #{totamt,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=BIGINT},
      open_id = #{openId,jdbcType=VARCHAR},
      bank_type = #{bankType,jdbcType=INTEGER},
      bank_type_code = #{bankTypeCode,jdbcType=VARCHAR},
      bank_type_info = #{bankTypeInfo,jdbcType=VARCHAR},
      order_rate = #{orderRate,jdbcType=DECIMAL},
      rate_fee = #{rateFee,jdbcType=DECIMAL},
      is_cash = #{isCash,jdbcType=INTEGER},
      pay_num = #{payNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
   <select id="queryConsumerBySellerId" resultType="java.lang.String" parameterType="java.lang.Long" >
   	 SELECT DISTINCT(open_id) FROM  fq_third_pay WHERE open_id is not NULL and seller_id = #{sellerId} AND type IN (1,3,5) ;
  </select>
  
  
  <select id="querySellerTransactionNumberByDate" resultType="java.util.Map" parameterType="map" >
 	 select COUNT(*) as num, seller_id as sellerId from fq_third_pay 
 		 where pay_time  BETWEEN #{startDate} and #{endDate}   
 	 GROUP BY seller_id
  </select>
</mapper>