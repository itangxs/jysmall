<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.qhjys.mall.mapper.ReviewsLogMapper" >
  <resultMap id="BaseResultMap" type="cn.qhjys.mall.entity.ReviewsLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="detail_id" property="detailId" jdbcType="BIGINT" />
    <result column="store_id" property="storeId" jdbcType="BIGINT" />
    <result column="prod_id" property="prodId" jdbcType="BIGINT" />
    <result column="reply_id" property="replyId" jdbcType="BIGINT" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="tag" property="tag" jdbcType="VARCHAR" />
    <result column="reviews" property="reviews" jdbcType="VARCHAR" />
    <result column="images" property="images" jdbcType="VARCHAR" />
    <result column="anonymous" property="anonymous" jdbcType="BIT" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="seller_reply_time" property="sellerReplyTime" jdbcType="TIMESTAMP" />
    <result column="seller_reply_content" property="sellerReplyContent" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, detail_id, store_id, prod_id, reply_id, score, tag, reviews, images, anonymous, 
    ip, create_time, seller_reply_time, seller_reply_content, enabled
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.qhjys.mall.entity.ReviewsLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reviews_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from reviews_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from reviews_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.qhjys.mall.entity.ReviewsLogExample" >
    delete from reviews_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.qhjys.mall.entity.ReviewsLog" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reviews_log (detail_id, store_id, prod_id, 
      reply_id, score, tag, 
      reviews, images, anonymous, 
      ip, create_time, seller_reply_time, 
      seller_reply_content, enabled)
    values (#{detailId,jdbcType=BIGINT}, #{storeId,jdbcType=BIGINT}, #{prodId,jdbcType=BIGINT}, 
      #{replyId,jdbcType=BIGINT}, #{score,jdbcType=INTEGER}, #{tag,jdbcType=VARCHAR}, 
      #{reviews,jdbcType=VARCHAR}, #{images,jdbcType=VARCHAR}, #{anonymous,jdbcType=BIT}, 
      #{ip,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{sellerReplyTime,jdbcType=TIMESTAMP}, 
      #{sellerReplyContent,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="cn.qhjys.mall.entity.ReviewsLog" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reviews_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="detailId != null" >
        detail_id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="prodId != null" >
        prod_id,
      </if>
      <if test="replyId != null" >
        reply_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="tag != null" >
        tag,
      </if>
      <if test="reviews != null" >
        reviews,
      </if>
      <if test="images != null" >
        images,
      </if>
      <if test="anonymous != null" >
        anonymous,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="sellerReplyTime != null" >
        seller_reply_time,
      </if>
      <if test="sellerReplyContent != null" >
        seller_reply_content,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="detailId != null" >
        #{detailId,jdbcType=BIGINT},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=BIGINT},
      </if>
      <if test="prodId != null" >
        #{prodId,jdbcType=BIGINT},
      </if>
      <if test="replyId != null" >
        #{replyId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="reviews != null" >
        #{reviews,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="anonymous != null" >
        #{anonymous,jdbcType=BIT},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerReplyTime != null" >
        #{sellerReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerReplyContent != null" >
        #{sellerReplyContent,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.qhjys.mall.entity.ReviewsLogExample" resultType="java.lang.Integer" >
    select count(*) from reviews_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update reviews_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.detailId != null" >
        detail_id = #{record.detailId,jdbcType=BIGINT},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=BIGINT},
      </if>
      <if test="record.prodId != null" >
        prod_id = #{record.prodId,jdbcType=BIGINT},
      </if>
      <if test="record.replyId != null" >
        reply_id = #{record.replyId,jdbcType=BIGINT},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.tag != null" >
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.reviews != null" >
        reviews = #{record.reviews,jdbcType=VARCHAR},
      </if>
      <if test="record.images != null" >
        images = #{record.images,jdbcType=VARCHAR},
      </if>
      <if test="record.anonymous != null" >
        anonymous = #{record.anonymous,jdbcType=BIT},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sellerReplyTime != null" >
        seller_reply_time = #{record.sellerReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sellerReplyContent != null" >
        seller_reply_content = #{record.sellerReplyContent,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null" >
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update reviews_log
    set id = #{record.id,jdbcType=BIGINT},
      detail_id = #{record.detailId,jdbcType=BIGINT},
      store_id = #{record.storeId,jdbcType=BIGINT},
      prod_id = #{record.prodId,jdbcType=BIGINT},
      reply_id = #{record.replyId,jdbcType=BIGINT},
      score = #{record.score,jdbcType=INTEGER},
      tag = #{record.tag,jdbcType=VARCHAR},
      reviews = #{record.reviews,jdbcType=VARCHAR},
      images = #{record.images,jdbcType=VARCHAR},
      anonymous = #{record.anonymous,jdbcType=BIT},
      ip = #{record.ip,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      seller_reply_time = #{record.sellerReplyTime,jdbcType=TIMESTAMP},
      seller_reply_content = #{record.sellerReplyContent,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.qhjys.mall.entity.ReviewsLog" >
    update reviews_log
    <set >
      <if test="detailId != null" >
        detail_id = #{detailId,jdbcType=BIGINT},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=BIGINT},
      </if>
      <if test="prodId != null" >
        prod_id = #{prodId,jdbcType=BIGINT},
      </if>
      <if test="replyId != null" >
        reply_id = #{replyId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="reviews != null" >
        reviews = #{reviews,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="anonymous != null" >
        anonymous = #{anonymous,jdbcType=BIT},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerReplyTime != null" >
        seller_reply_time = #{sellerReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerReplyContent != null" >
        seller_reply_content = #{sellerReplyContent,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.qhjys.mall.entity.ReviewsLog" >
    update reviews_log
    set detail_id = #{detailId,jdbcType=BIGINT},
      store_id = #{storeId,jdbcType=BIGINT},
      prod_id = #{prodId,jdbcType=BIGINT},
      reply_id = #{replyId,jdbcType=BIGINT},
      score = #{score,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      reviews = #{reviews,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      anonymous = #{anonymous,jdbcType=BIT},
      ip = #{ip,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      seller_reply_time = #{sellerReplyTime,jdbcType=TIMESTAMP},
      seller_reply_content = #{sellerReplyContent,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>