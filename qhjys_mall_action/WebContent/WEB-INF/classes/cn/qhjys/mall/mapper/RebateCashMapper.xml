<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.qhjys.mall.mapper.RebateCashMapper" >
  <resultMap id="BaseResultMap" type="cn.qhjys.mall.entity.RebateCash" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="seller_id" property="sellerId" jdbcType="BIGINT" />
    <result column="store_id" property="storeId" jdbcType="BIGINT" />
    <result column="rebate_id" property="rebateId" jdbcType="BIGINT" />
    <result column="integral_total" property="integralTotal" jdbcType="DECIMAL" />
    <result column="need_total" property="needTotal" jdbcType="DECIMAL" />
    <result column="real_total" property="realTotal" jdbcType="DECIMAL" />
    <result column="totamt_total" property="totamtTotal" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, seller_id, store_id, rebate_id, integral_total, need_total, real_total, totamt_total
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.qhjys.mall.entity.RebateCashExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rebate_cash
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from rebate_cash
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from rebate_cash
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.qhjys.mall.entity.RebateCashExample" >
    delete from rebate_cash
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.qhjys.mall.entity.RebateCash" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rebate_cash (seller_id, store_id, rebate_id, 
      integral_total, need_total, real_total, 
      totamt_total)
    values (#{sellerId,jdbcType=BIGINT}, #{storeId,jdbcType=BIGINT}, #{rebateId,jdbcType=BIGINT}, 
      #{integralTotal,jdbcType=DECIMAL}, #{needTotal,jdbcType=DECIMAL}, #{realTotal,jdbcType=DECIMAL}, 
      #{totamtTotal,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="cn.qhjys.mall.entity.RebateCash" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rebate_cash
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="rebateId != null" >
        rebate_id,
      </if>
      <if test="integralTotal != null" >
        integral_total,
      </if>
      <if test="needTotal != null" >
        need_total,
      </if>
      <if test="realTotal != null" >
        real_total,
      </if>
      <if test="totamtTotal != null" >
        totamt_total,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sellerId != null" >
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=BIGINT},
      </if>
      <if test="rebateId != null" >
        #{rebateId,jdbcType=BIGINT},
      </if>
      <if test="integralTotal != null" >
        #{integralTotal,jdbcType=DECIMAL},
      </if>
      <if test="needTotal != null" >
        #{needTotal,jdbcType=DECIMAL},
      </if>
      <if test="realTotal != null" >
        #{realTotal,jdbcType=DECIMAL},
      </if>
      <if test="totamtTotal != null" >
        #{totamtTotal,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.qhjys.mall.entity.RebateCashExample" resultType="java.lang.Integer" >
    select count(*) from rebate_cash
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rebate_cash
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=BIGINT},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=BIGINT},
      </if>
      <if test="record.rebateId != null" >
        rebate_id = #{record.rebateId,jdbcType=BIGINT},
      </if>
      <if test="record.integralTotal != null" >
        integral_total = #{record.integralTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.needTotal != null" >
        need_total = #{record.needTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.realTotal != null" >
        real_total = #{record.realTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.totamtTotal != null" >
        totamt_total = #{record.totamtTotal,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateStatMoney" parameterType="cn.qhjys.mall.entity.RebateCash" >
    update rebate_cash
    <set >
      <if test="integralTotal != null" >
        integral_total = integral_total+#{integralTotal,jdbcType=DECIMAL},
      </if>
      <if test="needTotal != null" >
        need_total = need_total+#{needTotal,jdbcType=DECIMAL},
      </if>
      <if test="realTotal != null" >
        real_total = real_total+#{realTotal,jdbcType=DECIMAL},
      </if>
      <if test="totamtTotal != null" >
        totamt_total = totamt_total+#{totamtTotal,jdbcType=DECIMAL},
      </if>
    </set>
     where rebate_id = #{rebateId,jdbcType=BIGINT}
  </update>
  
  <update id="updateByExample" parameterType="map" >
    update rebate_cash
    set id = #{record.id,jdbcType=BIGINT},
      seller_id = #{record.sellerId,jdbcType=BIGINT},
      store_id = #{record.storeId,jdbcType=BIGINT},
      rebate_id = #{record.rebateId,jdbcType=BIGINT},
      integral_total = #{record.integralTotal,jdbcType=DECIMAL},
      need_total = #{record.needTotal,jdbcType=DECIMAL},
      real_total = #{record.realTotal,jdbcType=DECIMAL},
      totamt_total = #{record.totamtTotal,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.qhjys.mall.entity.RebateCash" >
    update rebate_cash
    <set >
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=BIGINT},
      </if>
      <if test="rebateId != null" >
        rebate_id = #{rebateId,jdbcType=BIGINT},
      </if>
      <if test="integralTotal != null" >
        integral_total = #{integralTotal,jdbcType=DECIMAL},
      </if>
      <if test="needTotal != null" >
        need_total = #{needTotal,jdbcType=DECIMAL},
      </if>
      <if test="realTotal != null" >
        real_total = #{realTotal,jdbcType=DECIMAL},
      </if>
      <if test="totamtTotal != null" >
        totamt_total = #{totamtTotal,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.qhjys.mall.entity.RebateCash" >
    update rebate_cash
    set seller_id = #{sellerId,jdbcType=BIGINT},
      store_id = #{storeId,jdbcType=BIGINT},
      rebate_id = #{rebateId,jdbcType=BIGINT},
      integral_total = #{integralTotal,jdbcType=DECIMAL},
      need_total = #{needTotal,jdbcType=DECIMAL},
      real_total = #{realTotal,jdbcType=DECIMAL},
      totamt_total = #{totamtTotal,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectLastRebateCashBySerller" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
    select rc.* ,sr.status from rebate_cash rc
    LEFT JOIN store_info si ON rc.store_id = si.id
	LEFT JOIN store_rebate sr ON rc.rebate_id = sr.id 
    WHERE si.seller_id = #{sellerId,jdbcType=BIGINT}   AND rc.totamt_total >0 AND sr.begin_date &lt; NOW()
	ORDER BY sr.status DESC , sr.begin_date desc
  </select>
</mapper>